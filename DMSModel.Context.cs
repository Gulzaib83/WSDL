//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TP.DMS.WebServices.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BatchesReport> BatchesReports { get; set; }
        public virtual DbSet<CIPDurationEquipment> CIPDurationEquipments { get; set; }
        public virtual DbSet<Equipment> Equipments { get; set; }
        public virtual DbSet<Line> Lines { get; set; }
        public virtual DbSet<PackagedProduced> PackagedProduceds { get; set; }
        public virtual DbSet<ProductProducedAmount> ProductProducedAmounts { get; set; }
    
        public virtual ObjectResult<PS_BatchesPerProduct_Result> PS_BatchesPerProduct(Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<int> asProductId)
        {
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var asProductIdParameter = asProductId.HasValue ?
                new ObjectParameter("AsProductId", asProductId) :
                new ObjectParameter("AsProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_BatchesPerProduct_Result>("PS_BatchesPerProduct", startTimeParameter, endTimeParameter, asProductIdParameter);
        }
    
        public virtual ObjectResult<PS_CIP_Duration_Time_per_Date_Process_Result> PS_CIP_Duration_Time_per_Date_Process(Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, string asProcessClass)
        {
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var asProcessClassParameter = asProcessClass != null ?
                new ObjectParameter("AsProcessClass", asProcessClass) :
                new ObjectParameter("AsProcessClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_CIP_Duration_Time_per_Date_Process_Result>("PS_CIP_Duration_Time_per_Date_Process", startTimeParameter, endTimeParameter, asProcessClassParameter);
        }
    
        public virtual ObjectResult<PS_CIP_Duration_Time_per_Date_Process_message_Result> PS_CIP_Duration_Time_per_Date_Process_message(Nullable<System.DateTime> fromTime)
        {
            var fromTimeParameter = fromTime.HasValue ?
                new ObjectParameter("FromTime", fromTime) :
                new ObjectParameter("FromTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_CIP_Duration_Time_per_Date_Process_message_Result>("PS_CIP_Duration_Time_per_Date_Process_message", fromTimeParameter);
        }
    
        public virtual ObjectResult<PS_Packages_Produced_per_Date_Result> PS_Packages_Produced_per_Date(Nullable<int> asLineId, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var asLineIdParameter = asLineId.HasValue ?
                new ObjectParameter("AsLineId", asLineId) :
                new ObjectParameter("AsLineId", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_Packages_Produced_per_Date_Result>("PS_Packages_Produced_per_Date", asLineIdParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<PS_Product_Produced_per_Date_Result> PS_Product_Produced_per_Date(Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<int> asEquipmentId)
        {
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var asEquipmentIdParameter = asEquipmentId.HasValue ?
                new ObjectParameter("AsEquipmentId", asEquipmentId) :
                new ObjectParameter("AsEquipmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_Product_Produced_per_Date_Result>("PS_Product_Produced_per_Date", startTimeParameter, endTimeParameter, asEquipmentIdParameter);
        }
    
        public virtual ObjectResult<PS_Product_Produced_per_Equipment_Result> PS_Product_Produced_per_Equipment(Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<int> asEquipmentId)
        {
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var asEquipmentIdParameter = asEquipmentId.HasValue ?
                new ObjectParameter("AsEquipmentId", asEquipmentId) :
                new ObjectParameter("AsEquipmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_Product_Produced_per_Equipment_Result>("PS_Product_Produced_per_Equipment", startTimeParameter, endTimeParameter, asEquipmentIdParameter);
        }
    }
}
